--- Exercício 1 ---

size(a): 8
size(b): 12
---
a:
0x100 - 0xA4
0x101 - 0xA3
0x102 - 0xA2
0x103 - 0xA1
0x104 - 0xB4
0x105 - 0xB3
0x106 - 0xB2
0x107 - 0xB1

---
b:
0x200 - 0xA2
0x201 - 0xA1
0x202 - 0xB2
0x203 - 0xB1
0x204 - 0xC2
0x205 - 0xC1
0x206 - 0xD2
0x207 - 0xD1
0x208 - 0xE2
0x209 - 0xE1
0x20A - 0xF2
0x20B - 0xF1



--- Exercício 2 ---

Maior tipo = int (4 bytes)
0x0100 = 0b0000 0001 0000 0000 = 256 (múltiplo de 4)
Tamanho total = 4 + 2 + 4 = 10 (+ 2 padding) = 12 bytes (múltiplo de 4)


0x100 - 0xA4 // múltiplo de 4
0x101 - 0xA3
0x102 - 0xA2
0x103 - 0xA1
0x104 - 0xB2 // múltiplo de 2
0x105 - 0xB1
0x106 - 0x?? // padding
0x107 - 0x?? // padding
0x108 - 0xC4 // múltiplo de 4
0x109 - 0xC3
0x10A - 0xC2
0x10B - 0xC1



--- Exercício 3 ---

Maior campo = int (4 bytes)
0x0100 = 0b0000 0001 0000 0000 = 256 (múltiplo de 4)
Tamanho = 4 bytes 

vary.a:
0x100 - 0xA4
0x101 - 0xA3
0x102 - 0xA2
0x103 - 0xA1
---
vary.b:
0x100 - 0xB2
0x101 - 0xB1
0x102 - 0xA2
0x103 - 0xA1
---
vary.c:
0x100 - 0xC1
0x101 - 0xB1
0x102 - 0xA2
0x103 - 0xA1

// Observação: os bytes necessários são sobrescritos, mas os demais não são limpados (zerados)